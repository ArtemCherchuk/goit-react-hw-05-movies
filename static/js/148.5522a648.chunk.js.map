{"version":3,"file":"static/js/148.5522a648.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/RenderDetails/RenderDetails.module.css?8093","components/RenderDetails/RenderDetails.jsx","components/helpers/GetMovieDetails.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const Loader = ({ isLoading }) => {\n  return (\n    <Dna\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"containerInfo\":\"RenderDetails_containerInfo__HDm8r\",\"textInfo\":\"RenderDetails_textInfo__vCB04\"};","import css from './RenderDetails.module.css';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const RenderDetails = ({ movies }) => {\n  return (\n    <>\n      {movies.length !== 0 &&\n        movies.map(item => {\n          return (\n            <div key={item.id} className={css.containerInfo}>\n              <img\n                src={\n                  item.poster_path\n                    ? `https://image.tmdb.org/t/p/w400/${item.poster_path}`\n                    : defaultImg\n                }\n                alt=\"poster\"\n              />\n              <div className={css.textInfo}>\n                <h2>\n                  {item.title ?? item.original_title}\n                  <span>({item.release_date.slice(0, 4)})</span>\n                </h2>\n                <p>Rating: {String(item.vote_average).slice(0, 3)}</p>\n                <h3>Overview:</h3>\n                <p>{item.overview}</p>\n                <h3>Genres:</h3>\n                <p>{item.genres.map(item => item.name).join(' | ')}</p>\n              </div>\n            </div>\n          );\n        })}\n    </>\n  );\n};\n","import axios from 'axios';\nconst BASE_KEY = '63ea47c92388c32ebea94a57fb79599e';\n\nconst GetMovieDetails = async movieId => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${BASE_KEY}`\n  );\n};\n\nexport default GetMovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"linkBack\":\"MovieDetails_linkBack__CKjEq\",\"linkNav\":\"MovieDetails_linkNav__0hbSW\"};","import { Suspense, lazy, useEffect, useState } from 'react';\nimport { RenderDetails } from 'components/RenderDetails/RenderDetails';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport Notiflix from 'notiflix';\nimport GetMovieDetails from 'components/helpers/GetMovieDetails';\nimport css from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('pages/Cast/Cast'));\nconst Reviews = lazy(() => import('pages/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const movieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const response = await GetMovieDetails(movieId);\n        const { data } = response;\n        setMovies([data]);\n      } catch (error) {\n        Notiflix.Notify.warning(`${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    movieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLink} className={css.linkBack}>\n        Back\n      </Link>\n\n      <RenderDetails movies={movies} />\n      <div className={css.linkNav}>\n        <Link to={'cast'}>Cast</Link>\n        <Link to={'reviews'}>Reviews</Link>\n      </div>\n\n      <Suspense fallback={<Loader isLoading={isLoading} />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />}></Route>\n          <Route path=\"reviews\" element={<Reviews />}></Route>\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Loader","_ref","isLoading","_jsx","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","RenderDetails","movies","_Fragment","children","length","map","item","_item$title","_jsxs","className","css","src","poster_path","concat","alt","title","original_title","release_date","slice","String","vote_average","overview","genres","name","join","id","GetMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","_context","prev","next","axios","abrupt","sent","stop","_x","apply","arguments","Cast","lazy","Reviews","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setIsLoading","backLink","useLocation","state","from","useParams","useEffect","movieDetails","response","data","t0","Notiflix","message","finish","Link","to","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}