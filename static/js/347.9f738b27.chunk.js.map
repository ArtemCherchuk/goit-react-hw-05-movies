{"version":3,"file":"static/js/347.9f738b27.chunk.js","mappings":"4LAEaA,EAAS,SAAHC,GAAuB,IAAjBC,EAASD,EAATC,UACvB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,QAASH,EACTI,OAAO,KACPC,MAAM,KACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,eAGnB,C,2ECZA,EAAuB,yBAAvB,EAA2D,6B,SCwB3D,EAtBmB,SAAHT,GAAoB,IAAdU,EAAMV,EAANU,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACEV,EAAAA,EAAAA,KAAA,MAAIW,UAAWC,EAASC,SACH,IAAlBL,EAAOM,QACNN,EAAOO,KAAI,SAAAC,GAAS,IAADC,EACjB,OACEjB,EAAAA,EAAAA,KAAA,MAAAa,UACEb,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CACHP,UAAWC,EACXO,GAAE,WAAAC,OAAaJ,EAAKK,IACpBC,MAAO,CAAEC,KAAMd,GAAWI,SAEf,QAFeI,EAEzBD,EAAKQ,aAAK,IAAAP,EAAAA,EAAID,EAAKS,QANfT,EAAKK,GAUlB,KAGR,C,0KCnBMK,EAAe,eAAA5B,GAAA6B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACTC,EAAAA,EAAAA,IAAU,2DAADb,OAHP,qCAKb,KAAD,SAAAU,EAAAI,OAAA,SAAAJ,EAAAK,MAAA,wBAAAL,EAAAM,OAAA,GAAAP,EAAA,KACF,kBAJoB,OAAA/B,EAAAuC,MAAA,KAAAC,UAAA,KAMrB,I,SC0BA,EA9BiB,WACf,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC/B,EAAMiC,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1C7C,EAAS8C,EAAA,GAAEC,EAAYD,EAAA,GAmB9B,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAlD,GAAA6B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAoB,EAAAC,EAAA,OAAAtB,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEK,OAFLF,EAAAC,KAAA,EAEde,GAAa,GAAMhB,EAAAE,KAAA,EACImB,IAAsB,KAAD,EAAtCF,EAAQnB,EAAAK,KACNe,EAAYD,EAASG,KAArBF,QACRP,GAASU,EAAAA,EAAAA,GAAKH,IAAUpB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAwB,GAAAxB,EAAA,SAExByB,IAAAA,OAAAA,QAAwB,GAADnC,OAAIU,EAAAwB,GAAME,UAAW,QAExB,OAFwB1B,EAAAC,KAAA,GAE5Ce,GAAa,GAAOhB,EAAA2B,OAAA,6BAAA3B,EAAAM,OAAA,GAAAP,EAAA,wBAEvB,kBAXc,OAAA/B,EAAAuC,MAAA,KAAAC,UAAA,KAafU,GACF,GAAG,KAGDU,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9C,SAAA,EACEb,EAAAA,EAAAA,KAAA,MAAAa,SAAI,8BACJb,EAAAA,EAAAA,KAAC4D,EAAAA,EAAU,CAACpD,OAAQA,KACpBR,EAAAA,EAAAA,KAACH,EAAAA,EAAM,CAACE,UAAWA,MAGzB,C","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/helpers/GetMoviesTopDay.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { Dna } from 'react-loader-spinner';\n\nexport const Loader = ({ isLoading }) => {\n  return (\n    <Dna\n      visible={isLoading}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"listLink\":\"MoviesList_listLink__Ke9VO\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.length !== 0 &&\n        movies.map(item => {\n          return (\n            <li key={item.id}>\n              <Link\n                className={css.listLink}\n                to={`/movies/${item.id}`}\n                state={{ from: location }}\n              >\n                {item.title ?? item.name}\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst BASE_KEY = '63ea47c92388c32ebea94a57fb79599e';\n\nconst GetMoviesTopDay = async () => {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${BASE_KEY}`\n  );\n};\n\nexport default GetMoviesTopDay;\n","import Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport GetMoviesDataTopDay from 'components/helpers/GetMoviesTopDay';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const response = await GetMoviesDataTopDay();\n        const { results } = response.data;\n        setMovies([...results]);\n      } catch (error) {\n        Notiflix.Notify.warning(`${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>The best films for today</h1>\n      <MoviesList movies={movies} />\n      <Loader isLoading={isLoading} />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["Loader","_ref","isLoading","_jsx","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","movies","location","useLocation","className","css","children","length","map","item","_item$title","Link","to","concat","id","state","from","title","name","GetMoviesTopDay","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","axios","abrupt","sent","stop","apply","arguments","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setIsLoading","useEffect","getMovies","response","results","GetMoviesDataTopDay","data","_toConsumableArray","t0","Notiflix","message","finish","_jsxs","_Fragment","MoviesList"],"sourceRoot":""}